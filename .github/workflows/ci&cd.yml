name: CI/CD to GKE

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/cmsangular:${{ github.run_number }}

    - name: Log out from Docker Hub
      run: docker logout

  deploy-to-gke:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/cmsangular:24

    steps:
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.4.0
      with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: carbon-pride-425609-g0
          export_default_credentials: true

    - name: Install kubectl
      run: |
          gcloud components install kubectl

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials loki-cluster-pdv --zone us-central1-c --project carbon-pride-425609-g0

   

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    
   
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Deploy to GKE
      run: |
        kubectl apply -f kubernetes/ingresscontroller.yml
        kubectl apply -f kubernetes/cms-service.yml
        kubectl apply -f kubernetes/spotify-service.yml
        kubectl apply -f kubernetes/spotify-deploy.yml
        kubectl apply -f kubernetes/cmsangular-deploy.yml

    - name: Check deployment status
      run: |
          kubectl get pods 
          

    
